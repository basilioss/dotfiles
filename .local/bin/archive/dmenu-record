#!/bin/sh
#
# Description: Record screen with ffmpeg (https://www.youtube.com/watch?v=386Z2yeQ5fo)
# Usage:
#     `$0`: Ask for recording type via dmenu
#     `$0 screencast`: Record both audio and screen
#     `$0 video`: Record only screen
#     `$0 audio`: Record only audio
#     `$0 kill`: Kill existing recording
#     If there is already a running instance, user will be prompted to end it.
#     If audio does not work, open pavucontrol and check the recording tab (install pulseaudio-alsa package)
# Dependencies: ffmpeg, slop
# Credits: https://github.com/LukeSmithxyz/voidrice/blob/master/.local/bin/dmenurecord
# Github: https://github.com/basilioss/dotfiles
# Bugs: videoselected is laggy, screencast does not record microphone and speaker at the same time

# microphone + speaker
#  -f pulse -i alsa_output.pci-0000_00_1f.3.analog-stereo.monitor \
#  -f pulse -i alsa_input.hw_0_0 \
#  https://superuser.com/questions/899352/ffmpeg-commandline-options-to-recording-audio-from-mic-and-speakers

updateicon() {
  yad --notification --command="notify-send '$1'" --image=record  &
  echo $! > /tmp/yadrecordingpid
}

killrecording() {
  recpid="$(cat /tmp/recordingpid)"
  # kill with SIGTERM, allowing finishing touches.
  kill -15 "$recpid"
  rm -f /tmp/recordingpid

  yadpid="$(cat /tmp/yadrecordingpid)"
  kill -15 "$yadpid"
  rm -f /tmp/yadrecordingpid

  # even after SIGTERM, ffmpeg may still run, so SIGKILL it.
  sleep 3
  kill -9 "$recpid"
  exit
}

screencast() {
  ffmpeg -y \
  -f x11grab \
  -framerate 60 \
  -s "$(xdpyinfo | awk '/dimensions/ {print $2;}')" \
  -i "$DISPLAY" \
  -f alsa -i default \
  -r 30 \
  -c:v h264 -crf 0 -preset ultrafast -c:a aac \
  "$HOME/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
  echo $! > /tmp/recordingpid
  updateicon "Recording both audio and screen"
}

video() {
  ffmpeg \
  -f x11grab \
  -s "$(xdpyinfo | awk '/dimensions/ {print $2;}')" \
  -i "$DISPLAY" \
  -c:v libx264 -qp 0 -r 30 \
  "$HOME/video-$(date '+%y%m%d-%H%M-%S').mkv" &
  echo $! > /tmp/recordingpid
  updateicon "Recording only video"
}

webcamhidef() {
  ffmpeg \
  -f v4l2 \
  -i /dev/video0 \
  -video_size 1920x1080 \
  "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
  echo $! > /tmp/recordingpid
  updateicon "Recording webcam in higher resolution"
}

webcam() {
  ffmpeg \
  -f v4l2 \
  -i /dev/video0 \
  -video_size 640x480 \
  "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
  echo $! > /tmp/recordingpid
  updateicon "Recording webcam"
}


audio() {
  ffmpeg \
  -f alsa -i default \
  -c:a flac \
  "$HOME/audio-$(date '+%y%m%d-%H%M-%S').flac" &
  echo $! > /tmp/recordingpid
  updateicon "Recording only audio"
}

askrecording() {
  choice=$(printf "screencast\\nvideo\\nvideo selected\\naudio\\nwebcam\\nwebcam (hi-def)" | dmenu -i -p "Select recording style:")
  case "$choice" in
    screencast) screencast;;
    audio) audio;;
    video) video;;
    *selected) videoselected;;
    webcam) webcam;;
    "webcam (hi-def)") webcamhidef;;
  esac
}

asktoend() {
  response=$(printf "No\\nYes" | dmenu -i -p "Recording still active. End recording?") &&
  [ "$response" = "Yes" ] &&  killrecording
}

videoselected() {
  slop -f "%x %y %w %h" > /tmp/slop
  read -r X Y W H < /tmp/slop
  rm /tmp/slop

  ffmpeg \
  -f x11grab \
  -framerate 60 \
  -video_size "$W"x"$H" \
  -i :0.0+"$X,$Y" \
  -f pulse -i alsa_output.pci-0000_00_1f.3.analog-stereo.monitor \
  -c:v libx264 -qp 0 -r 30 \
  "$HOME/box-$(date '+%y%m%d-%H%M-%S').mkv" &
  echo $! > /tmp/recordingpid
  updateicon "Recording selected video with audio from speakers"
}

case "$1" in
  screencast) screencast ;;
  audio) audio ;;
  video) video ;;
  *selected) videoselected ;;
  kill) killrecording ;;
  *) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording ;;
esac
